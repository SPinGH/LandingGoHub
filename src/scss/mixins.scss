@mixin font($fontName, $fileName, $weight, $style) {
    @font-face {
        font-family: $fontName;
        font-display: swap;
        src: url('../fonts/#{$fileName}.ttf') format('truetype'), url('../fonts/#{$fileName}.woff') format('woff'),
            url('../fonts/#{$fileName}.woff2') format('woff2');
        font-weight: #{$weight};
        font-style: #{$style};
    }
}

@mixin respValue($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type == 1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(
                #{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth}px) / #{$maxWidthContainer - $minWidth})
            );
        }
        @media (max-width: #{$minWidth + px}) {
            #{$property}: $minSize + px;
        }
    } @else if $type == 2 {
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth}px) / #{$maxWidth - $minWidth}));
        }
    } @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth}px) / #{$maxWidth - $minWidth}));
    }
}
